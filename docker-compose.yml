version: '3.8'

services:
  gateway:
    build:
      context: ./doctor-appointment-backend/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - GATEWAY_PORT=8080
    volumes:
      - ./doctor-appointment-backend/gateway:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  doctors-service:
    build:
      context: ./doctor-appointment-backend
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=development
      - PORT=4001
      - SERVICE_NAME=doctors
    volumes:
      - ./doctor-appointment-backend:/app
      - /app/node_modules
    depends_on:
      - redis
      - rabbitmq
    networks:
      - app-network

  auth-service:
    build:
      context: ./doctor-appointment-backend
      dockerfile: Dockerfile
    ports:
      - "4002:4002"
    environment:
      - NODE_ENV=development
      - PORT=4002
      - SERVICE_NAME=auth
    volumes:
      - ./doctor-appointment-backend:/app
      - /app/node_modules
    networks:
      - app-network

  appointments-service:
    build:
      context: ./doctor-appointment-backend
      dockerfile: Dockerfile
    ports:
      - "4003:4003"
    environment:
      - NODE_ENV=development
      - PORT=4003
      - SERVICE_NAME=appointments
    volumes:
      - ./doctor-appointment-backend:/app
      - /app/node_modules
    networks:
      - app-network

  reviews-service:
    build:
      context: ./doctor-appointment-backend
      dockerfile: Dockerfile
    ports:
      - "4004:4004"
    environment:
      - NODE_ENV=development
      - PORT=4004
      - SERVICE_NAME=reviews
    volumes:
      - ./doctor-appointment-backend:/app
      - /app/node_modules
    networks:
      - app-network

  locations-service:
    build:
      context: ./doctor-appointment-backend
      dockerfile: Dockerfile
    ports:
      - "4005:4005"
    environment:
      - NODE_ENV=development
      - PORT=4005
      - SERVICE_NAME=locations
    volumes:
      - ./doctor-appointment-backend:/app
      - /app/node_modules
    networks:
      - app-network

  backend:
    build:
      context: ./doctor-appointment-backend
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
    volumes:
      - ./doctor-appointment-backend:/app
      - /app/node_modules
    depends_on:
      - redis
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  admin-service:
    build:
      context: ./doctor-appointment-backend
      dockerfile: Dockerfile
    ports:
      - "4006:4006"
    environment:
      - NODE_ENV=development
      - PORT=4006
      - SERVICE_NAME=admin
    volumes:
      - ./doctor-appointment-backend:/app
      - /app/node_modules
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data: 